package project.uni.artefacto;

import project.uni.artefacto.data.CambiosSelectorValor;
import project.uni.artefacto.data.Dispositivo;
import project.uni.artefacto.data.RelacionDispositivoSelector;
import project.uni.artefacto.data.Selector;
import project.uni.artefacto.data.SelectorValor;
import java.net.UnknownHostException;
import java.util.Date;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import project.ac.mongolib.driven.CriterioActualizacion;
import project.ac.mongolib.driven.MongoHandler;

/**
 *
 * @author oarcila
 */
public class TestUsoDispositivo extends javax.swing.JFrame
{

    private MongoHandler mongoHandler;

    private String nombreDispositivo;
    private Selector selector;
    private SelectorValor selectorValor;

    /**
     * Creates new form NewJFrame
     */
    public TestUsoDispositivo()
    {
        initComponents();

        try
        {
            mongoHandler = new MongoHandler("Artefactos");
        }
        catch (UnknownHostException ex)
        {
            Logger.getLogger(TestUsoDispositivo.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        nombreDispositivo = "Encencedor-Alcoba-Principal";
        cargarValoresSelector(nombreDispositivo);

        if (bSelector.isEnabled())
        {
            configurarInicioGUI();
        }

    }

    private void configurarInicioGUI()
    {
        bSelector.setSelected(selectorValor.getLuz());
        
        sNivelLuz.setMaximum(100);
        sNivelLuz.setMinimum(0);
        sNivelLuz.setValue(selectorValor.getValor());
        
        if (bSelector.isSelected())
        {
            bSelector.setText("Apagar");
            tEstadoSelector.setText("Encendido");
        }
        else
        {
            sNivelLuz.setEnabled(false);
        }
    }

    private void cargarValoresSelector(String nombreDispositivo)
    {
        LinkedList<Dispositivo> dispositivos = (LinkedList<Dispositivo>) mongoHandler.find(Dispositivo.class, Dispositivo.nombre, nombreDispositivo);

        if (dispositivos.size() > 0)
        {
            Dispositivo dispositivo = dispositivos.getFirst();

            String keyDisp = dispositivo.getString("_id");

            LinkedList<RelacionDispositivoSelector> lRelDisSel = (LinkedList<RelacionDispositivoSelector>) mongoHandler.find(RelacionDispositivoSelector.class, "idDispositivo", keyDisp);
            RelacionDispositivoSelector relDisSel = lRelDisSel.getFirst();
            String keySel = relDisSel.getIdSelector();

            LinkedList<Selector> selectores = (LinkedList<Selector>) mongoHandler.find(Selector.class, "_id", keySel);
            LinkedList<SelectorValor> selectoresValores = (LinkedList<SelectorValor>) mongoHandler.find(SelectorValor.class, selectorValor.idSelector, keySel);

            selector = selectores.getFirst();
            selectorValor = selectoresValores.getFirst();
        }
        else
        {
            bSelector.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bSelector = new javax.swing.JToggleButton();
        tEstadoSelector = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        sNivelLuz = new javax.swing.JSlider();
        tNivelLuz = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bSelector.setText("Encender");
        bSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSelectorActionPerformed(evt);
            }
        });

        tEstadoSelector.setText("Apagado");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Encendedor Alcoba Principal");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Selector Alcoba Principal");

        sNivelLuz.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sNivelLuzStateChanged(evt);
            }
        });
        sNivelLuz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sNivelLuzMouseReleased(evt);
            }
        });

        tNivelLuz.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        tNivelLuz.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(bSelector)
                                    .addGap(18, 18, 18)
                                    .addComponent(tEstadoSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tNivelLuz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addComponent(sNivelLuz, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(19, 19, 19)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSelector)
                    .addComponent(tEstadoSelector)
                    .addComponent(tNivelLuz))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sNivelLuz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bSelectorActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bSelectorActionPerformed
    {//GEN-HEADEREND:event_bSelectorActionPerformed
        boolean estadoLuz = false;
        if (bSelector.isSelected())
        {
            estadoLuz = true;
            bSelector.setText("Apagar");
            tEstadoSelector.setText("Encendido");
        }
        else
        {
            bSelector.setText("Encender");
            tEstadoSelector.setText("Apagado");
        }
        selectorValor.setLuz(estadoLuz);
        sNivelLuz.setEnabled(estadoLuz);

        actualizarValorAlmacenadoLuz(selectorValor);
        insertarNuevoValorCambio(selector, selectorValor);
    }//GEN-LAST:event_bSelectorActionPerformed

    private void sNivelLuzStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_sNivelLuzStateChanged
    {//GEN-HEADEREND:event_sNivelLuzStateChanged
        selectorValor.setValor(sNivelLuz.getValue());
        tNivelLuz.setText(""+sNivelLuz.getValue());
    }//GEN-LAST:event_sNivelLuzStateChanged

    private void sNivelLuzMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_sNivelLuzMouseReleased
    {//GEN-HEADEREND:event_sNivelLuzMouseReleased
        actualizarValorAlmacenadoNivel(selectorValor);
        insertarNuevoValorCambio(selector, selectorValor);       
    }//GEN-LAST:event_sNivelLuzMouseReleased

    private void actualizarValorAlmacenadoLuz(SelectorValor selectorValor)
    {
        CriterioActualizacion criterioActualizacion = new CriterioActualizacion();
        criterioActualizacion.setCriterio(SelectorValor.idSelector, selectorValor.getIdSelector());
        criterioActualizacion.setNuevoValor(SelectorValor.luz, selectorValor.getLuz());

        mongoHandler.update(SelectorValor.class, criterioActualizacion);
    }

    private void actualizarValorAlmacenadoNivel(SelectorValor selectorValor)
    {
        CriterioActualizacion criterioActualizacion = new CriterioActualizacion();
        criterioActualizacion.setCriterio(SelectorValor.idSelector, selectorValor.getIdSelector());
        criterioActualizacion.setNuevoValor(SelectorValor.valor, selectorValor.getValor());
        
        mongoHandler.update(SelectorValor.class, criterioActualizacion);
    }

    private void insertarNuevoValorCambio(Selector selector, SelectorValor selectorValor)
    {
        Date date = new Date();
        CambiosSelectorValor cambiosSelectorValor = new CambiosSelectorValor("", selector.getString("_id"), date, selectorValor.getLuz(), selectorValor.getValor());
        mongoHandler.insert(cambiosSelectorValor);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(TestUsoDispositivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(TestUsoDispositivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(TestUsoDispositivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new TestUsoDispositivo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton bSelector;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSlider sNivelLuz;
    private javax.swing.JLabel tEstadoSelector;
    private javax.swing.JLabel tNivelLuz;
    // End of variables declaration//GEN-END:variables
}
